# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    oauth2.error_uri_base: '%env(OAUTH2_ERROR_URI_BASE)%'
    oauth2.issuer: '%env(OAUTH2_ISSUER)%'
    oauth2.access_token_ttl: '%env(int:ACCESS_TOKEN_TTL)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/Model/'
            - '../src/Security/SecurityUser.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # Token Hasher with APP_SECRET injection
    App\Service\TokenHasher:
        arguments:
            $secret: '%env(APP_SECRET)%'

    # Redis session handler
    Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler:
        arguments:
            - '@redis.session_connection'

    # Redis connection for sessions
    redis.session_connection:
        class: Redis
        calls:
            - connect:
                - '%env(REDIS_HOST)%'
                - '%env(int:REDIS_PORT)%'

    # Rate Limiter Service with whitelist configuration
    App\Service\RateLimiter\RateLimiterService:
        arguments:
            $oauthTokenLimiter: '@limiter.oauth_token'
            $loginLimiter: '@limiter.login'
            $globalIpLimiter: '@limiter.global_ip'
            $whitelistedIpsString: '%env(RATE_LIMITER_WHITELIST_IPS)%'

    # Audit Logger with dedicated Monolog channel
    App\Service\AuditLogger:
        arguments:
            $auditLogger: '@monolog.logger.audit'

    # Audit Log Cleanup Command with configurable retention
    App\Command\AuditLogCleanupCommand:
        arguments:
            $defaultRetentionDays: '%env(int:AUDIT_LOG_RETENTION_DAYS)%'

    # OAuth2 Exception Subscriber with error URI base
    App\OAuth2\EventSubscriber\OAuth2ExceptionSubscriber:
        arguments:
            $errorUriBase: '%oauth2.error_uri_base%'

    # Private Key Encryption Service
    App\Service\PrivateKeyEncryptionService:
        arguments:
            $encryptionKey: '%env(PRIVATE_KEY_ENCRYPTION_KEY)%'

    # JWT Token Generator
    App\OAuth2\Service\JwtTokenGenerator:
        arguments:
            $issuer: '%oauth2.issuer%'
