framework:
    rate_limiter:
        # OAuth2 Token Endpoint Rate Limiter
        # Limits: 20 requests per minute per client_id
        # Strategy: Sliding Window for precise rate control
        oauth_token:
            policy: 'sliding_window'
            limit: 20
            interval: '1 minute'
            lock_factory: 'lock.rate_limiter.factory'

        # Login Rate Limiter
        # Limits: 5 attempts per 5 minutes per email
        # Strategy: Token Bucket for burst tolerance
        login:
            policy: 'token_bucket'
            limit: 5
            rate:
                interval: '5 minutes'
                amount: 5
            lock_factory: 'lock.rate_limiter.factory'

        # Global IP Rate Limiter
        # Limits: 100 requests per minute per IP
        # Strategy: Sliding Window for smooth rate control
        # Note: Whitelisted IPs are exempted (see RateLimiterService)
        global_ip:
            policy: 'sliding_window'
            limit: 100
            interval: '1 minute'
            lock_factory: 'lock.rate_limiter.factory'

    # Lock configuration for rate limiters
    # Uses Redis for distributed locking across multiple instances
    lock:
        rate_limiter:
            connection: '%env(REDIS_DSN)%'

    # Cache configuration for rate limiter storage
    # Redis backend ensures distributed rate limiting works correctly
    cache:
        pools:
            cache.rate_limiter:
                adapter: cache.adapter.redis
                provider: '%env(REDIS_DSN)%'

when@test:
    framework:
        rate_limiter:
            # Disable rate limiting in tests by setting very high limits
            oauth_token:
                policy: 'sliding_window'
                limit: 999999
                interval: '1 minute'
            login:
                policy: 'token_bucket'
                limit: 999999
                rate:
                    interval: '1 minute'
                    amount: 999999
            global_ip:
                policy: 'sliding_window'
                limit: 999999
                interval: '1 minute'
